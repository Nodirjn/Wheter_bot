name: Django CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd "pg_isready -U django -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run database migrations
        env:
          DATABASE_URL: postgres://django:password@localhost:5432/test_db
        run: |
          python manage.py migrate

      - name: Run tests
        env:
          DATABASE_URL: postgres://django:password@localhost:5432/test_db
        run: |
          python manage.py test

      - name: Collect static files (optional)
        run: |
          python manage.py collectstatic --noinput

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit (Python Security Linter)
        run: bandit -r .

      - name: Check dependencies for known vulnerabilities
        run: safety check

      - name: Run tests with coverage
        run: |
          pip install coverage
          coverage run manage.py test
          coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Install static analysis tools
        run: |
          pip install mypy

      - name: Run MyPy (Type Checking)
        run: mypy .

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Run Flake8
        run: flake8 .

      - name: Run Black (Check Mode)
        run: black --check .




